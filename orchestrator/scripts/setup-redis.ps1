# Script PowerShell pour d√©marrer Redis localement sur Windows
# Conforme aux obligations de communication Redis Streams

Write-Host "=== REDIS SETUP POUR COMMUNICATION INTER-AGENTS ===" -ForegroundColor Cyan
Write-Host "Selon sp√©cifications ONBOARDING_AI.md" -ForegroundColor Gray
Write-Host ""

# V√©rifier si Redis est d√©j√† en cours d'ex√©cution
$redisProcess = Get-Process -Name "redis-server" -ErrorAction SilentlyContinue

if ($redisProcess) {
    Write-Host "‚úÖ Redis est d√©j√† en cours d'ex√©cution (PID: $($redisProcess.Id))" -ForegroundColor Green
    
    # Test de connectivit√©
    try {
        $result = redis-cli ping 2>$null
        if ($result -eq "PONG") {
            Write-Host "‚úÖ Connectivit√© Redis confirm√©e" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  Redis process trouv√© mais pas de r√©ponse PING" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è  redis-cli non disponible pour test" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Redis n'est pas en cours d'ex√©cution" -ForegroundColor Red
    Write-Host ""
    
    # Chercher l'installation Redis
    $redisPaths = @(
        "C:\Program Files\Redis\redis-server.exe",
        "C:\Redis\redis-server.exe",
        "$env:USERPROFILE\redis\redis-server.exe",
        "$env:ProgramFiles\Redis\redis-server.exe"
    )
    
    $redisPath = $null
    foreach ($path in $redisPaths) {
        if (Test-Path $path) {
            $redisPath = $path
            break
        }
    }
    
    if ($redisPath) {
        Write-Host "‚úÖ Redis trouv√©: $redisPath" -ForegroundColor Green
        Write-Host "üöÄ D√©marrage de Redis..." -ForegroundColor Blue
        
        try {
            Start-Process -FilePath $redisPath -WindowStyle Minimized
            Start-Sleep -Seconds 3
            
            # V√©rifier que Redis a d√©marr√©
            $newProcess = Get-Process -Name "redis-server" -ErrorAction SilentlyContinue
            if ($newProcess) {
                Write-Host "‚úÖ Redis d√©marr√© avec succ√®s (PID: $($newProcess.Id))" -ForegroundColor Green
            } else {
                Write-Host "‚ùå √âchec du d√©marrage de Redis" -ForegroundColor Red
            }
        } catch {
            Write-Host "‚ùå Erreur lors du d√©marrage: $_" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå Redis non trouv√© sur ce syst√®me" -ForegroundColor Red
        Write-Host ""
        Write-Host "üì• Options d'installation:" -ForegroundColor Yellow
        Write-Host "  1. Docker:    docker run -d --name redis -p 6379:6379 redis:latest" -ForegroundColor Gray
        Write-Host "  2. WSL:       sudo apt install redis-server && sudo service redis-server start" -ForegroundColor Gray
        Write-Host "  3. Chocolatey: choco install redis-64" -ForegroundColor Gray
        Write-Host "  4. Manuel:    https://github.com/MicrosoftArchive/redis/releases" -ForegroundColor Gray
    }
}

Write-Host ""
Write-Host "=== TEST DE COMMUNICATION ===" -ForegroundColor Cyan

# Test avec Node.js si disponible
if (Get-Command node -ErrorAction SilentlyContinue) {
    Write-Host "üß™ Test des streams Redis..." -ForegroundColor Blue
    
    $testScript = Join-Path $PSScriptRoot "test-redis.cjs"
    if (Test-Path $testScript) {
        try {
            node $testScript
            Write-Host "‚úÖ Test Redis Streams r√©ussi" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå Test Redis Streams √©chou√©" -ForegroundColor Red
            Write-Host "Erreur: $_" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ö†Ô∏è  Script de test non trouv√©: $testScript" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ö†Ô∏è  Node.js non disponible pour test automatique" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== CONFIGURATION ===" -ForegroundColor Cyan
Write-Host "Variable d'environnement recommand√©e:" -ForegroundColor Gray
Write-Host "REDIS_URL=redis://127.0.0.1:6379" -ForegroundColor White
Write-Host ""
Write-Host "Canaux Redis utilis√©s (ONBOARDING_AI.md):" -ForegroundColor Gray
Write-Host "  - agents:global" -ForegroundColor White
Write-Host "  - agents:orchestrator" -ForegroundColor White
Write-Host "  - agents:pair:team03" -ForegroundColor White
Write-Host ""

if ($env:REDIS_URL) {
    Write-Host "‚úÖ Variable REDIS_URL configur√©e: $env:REDIS_URL" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Variable REDIS_URL non configur√©e (utilisera d√©faut)" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== HEARTBEAT SERVICE ===" -ForegroundColor Cyan
$heartbeatScript = Join-Path $PSScriptRoot "heartbeat-service.cjs"
if (Test-Path $heartbeatScript) {
    Write-Host "‚úÖ Service heartbeat disponible: $heartbeatScript" -ForegroundColor Green
    Write-Host "Pour d√©marrer: node $heartbeatScript" -ForegroundColor Gray
} else {
    Write-Host "‚ùå Service heartbeat manquant: $heartbeatScript" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéØ COMMUNICATION REDIS READY" -ForegroundColor Green -BackgroundColor DarkGreen
